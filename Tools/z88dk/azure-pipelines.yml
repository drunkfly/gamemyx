# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc


variables:
  PERL_CACHE: $(Pipeline.Workspace)/perl5
  CCACHE_DIR: $(Pipeline.Workspace)/ccache

trigger:
- master

pr:
  - master

pool:
  vmImage: 'Ubuntu 16.04'

steps:
- checkout: self
  submodules: true
- task: Cache@1
  inputs:
    key: 'perl_cache | "$(Agent.OS)"'
    path: $(PERL_CACHE)
  displayName: perlcache
- task: Cache@2
  inputs:
    key: 'ccache | "$(Agent.OS)"'
    path: $(CCACHE_DIR)
  displayName: ccache
- bash: |
    sudo apt-get install -y ccache libboost-all-dev texinfo texi2html gdb curl dos2unix ragel liblocal-lib-perl cpanminus
    eval $(perl -I$PERL_CACHE -Mlocal::lib=$PERL_CACHE)
    cpanm App::Prove Modern::Perl Capture::Tiny Capture::Tiny::Extended Path::Tiny File::Path Template Template::Plugin::YAML Test::Differences Text::Table CPU::Z80::Assembler Test::Cmd::Common Test::HexDifferences Data::HexDump Object::Tiny::RW Regexp::Common List::Uniq Clone
  displayName: "Install prerequisites"
- bash: |
    eval $(perl -I$PERL_CACHE -Mlocal::lib=$PERL_CACHE)
    ./build.sh -l
  displayName: 'Build binaries'
- bash: |
    eval $(perl -I$PERL_CACHE -Mlocal::lib=$PERL_CACHE)
    ./build.sh -b 
  displayName: 'Build libraries'
- bash: |
    eval $(perl -I$PERL_CACHE -Mlocal::lib=$PERL_CACHE)
    ./build.sh -b -l -e
  displayName: 'Build examples'
- bash: |
    eval $(perl -I$PERL_CACHE -Mlocal::lib=$PERL_CACHE)
    ./build.sh -b -l -t
  displayName: 'Build and run tests'
