reset_codearea(); (line 144)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =

Number of modules = 0
--------------------------------------------------------------------------------
section_blank = new_section(""); (line 147)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =

Number of modules = 0
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 151)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
p = append_reserve( 0 ); (line 156)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
append_byte( 1 ); (line 160)

Number of sections = 1, total size = 1
*1. "", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 1
    bytes = $01
    start =   0

Number of modules = 1
*0. "", start = 0, size = 1
    bytes = $01
--------------------------------------------------------------------------------
next_PC(); (line 161)

Number of sections = 1, total size = 1
*1. "", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0

Number of modules = 1
*0. "", start = 0, size = 1
    bytes = $01
--------------------------------------------------------------------------------
append_word( 0x0302 ); (line 162)

Number of sections = 1, total size = 3
*1. "", size = 3, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 2
    bytes = $01 $02 $03
    start =   0

Number of modules = 1
*0. "", start = 0, size = 3
    bytes = $01 $02 $03
--------------------------------------------------------------------------------
next_PC(); (line 163)

Number of sections = 1, total size = 3
*1. "", size = 3, addr = 0, origin = -1, align = 1, asmpc = 3, opcode_size = 0
    bytes = $01 $02 $03
    start =   0

Number of modules = 1
*0. "", start = 0, size = 3
    bytes = $01 $02 $03
--------------------------------------------------------------------------------
append_long( 0x07060504 ); (line 164)

Number of sections = 1, total size = 7
*1. "", size = 7, addr = 0, origin = -1, align = 1, asmpc = 3, opcode_size = 4
    bytes = $01 $02 $03 $04 $05 $06 $07
    start =   0

Number of modules = 1
*0. "", start = 0, size = 7
    bytes = $01 $02 $03 $04 $05 $06 $07
--------------------------------------------------------------------------------
next_PC(); (line 165)

Number of sections = 1, total size = 7
*1. "", size = 7, addr = 0, origin = -1, align = 1, asmpc = 7, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07
    start =   0

Number of modules = 1
*0. "", start = 0, size = 7
    bytes = $01 $02 $03 $04 $05 $06 $07
--------------------------------------------------------------------------------
append_value( 0x0A0908, 3 ); (line 166)

Number of sections = 1, total size = 10
*1. "", size = 10, addr = 0, origin = -1, align = 1, asmpc = 7, opcode_size = 3
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
    start =   0

Number of modules = 1
*0. "", start = 0, size = 10
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
--------------------------------------------------------------------------------
next_PC(); (line 167)

Number of sections = 1, total size = 10
*1. "", size = 10, addr = 0, origin = -1, align = 1, asmpc = 10, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
    start =   0

Number of modules = 1
*0. "", start = 0, size = 10
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A
--------------------------------------------------------------------------------
append_2bytes( 11, 12 ); (line 168)

Number of sections = 1, total size = 12
*1. "", size = 12, addr = 0, origin = -1, align = 1, asmpc = 10, opcode_size = 2
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
    start =   0

Number of modules = 1
*0. "", start = 0, size = 12
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
--------------------------------------------------------------------------------
next_PC(); (line 169)

Number of sections = 1, total size = 12
*1. "", size = 12, addr = 0, origin = -1, align = 1, asmpc = 12, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
    start =   0

Number of modules = 1
*0. "", start = 0, size = 12
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C
--------------------------------------------------------------------------------
p = append_reserve( 5 ); (line 170)

Number of sections = 1, total size = 17
*1. "", size = 17, addr = 0, origin = -1, align = 1, asmpc = 12, opcode_size = 5
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
    start =   0

Number of modules = 1
*0. "", start = 0, size = 17
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
--------------------------------------------------------------------------------
next_PC(); (line 171)

Number of sections = 1, total size = 17
*1. "", size = 17, addr = 0, origin = -1, align = 1, asmpc = 17, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
    start =   0

Number of modules = 1
*0. "", start = 0, size = 17
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $00 $00 $00 $00 $00
--------------------------------------------------------------------------------
memcpy( p, "hello", 5 ); (line 180)

Number of sections = 1, total size = 17
*1. "", size = 17, addr = 0, origin = -1, align = 1, asmpc = 17, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
    start =   0

Number of modules = 1
*0. "", start = 0, size = 17
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
--------------------------------------------------------------------------------
append_file_contents( file, -1 ); (line 189)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, origin = -1, align = 1, asmpc = 17, opcode_size = 3
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
next_PC(); (line 190)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, origin = -1, align = 1, asmpc = 20, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
append_file_contents( file, -1 ); (line 193)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, origin = -1, align = 1, asmpc = 20, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
next_PC(); (line 194)

Number of sections = 1, total size = 20
*1. "", size = 20, addr = 0, origin = -1, align = 1, asmpc = 20, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 20
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3
--------------------------------------------------------------------------------
append_file_contents( file, 1 ); (line 198)

Number of sections = 1, total size = 21
*1. "", size = 21, addr = 0, origin = -1, align = 1, asmpc = 20, opcode_size = 1
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
    start =   0

Number of modules = 1
*0. "", start = 0, size = 21
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
--------------------------------------------------------------------------------
next_PC(); (line 199)

Number of sections = 1, total size = 21
*1. "", size = 21, addr = 0, origin = -1, align = 1, asmpc = 21, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
    start =   0

Number of modules = 1
*0. "", start = 0, size = 21
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1
--------------------------------------------------------------------------------
append_file_contents( file, 1 ); (line 203)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 21, opcode_size = 1
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
next_PC(); (line 204)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $01 $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_byte( 0, 12 ); (line 207)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $0C $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $02 $03 $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_word( 1, 0x0A0B ); (line 208)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $04 $05 $06 $07 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_long( 3, 0x06070809 ); (line 209)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $08 $09 $0A $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_value( 7, 0x030405, 3 ); (line 210)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $0B $0C $68 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, 10, -1 ); (line 214)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $65 $6C $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, 13, -1 ); (line 218)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $6C $6F
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $6C $6F
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, 15, 2 ); (line 222)

Number of sections = 1, total size = 22
*1. "", size = 22, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 22
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F3
--------------------------------------------------------------------------------
patch_file_contents( file, 21, -1 ); (line 226)

Number of sections = 1, total size = 24
*1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 22, opcode_size = 2
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
--------------------------------------------------------------------------------
next_PC(); (line 228)

Number of sections = 1, total size = 24
*1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 24, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0

Number of modules = 1
*0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 234)

Number of sections = 1, total size = 24
*1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
*1. "", start = 24, size = 0
    bytes =
--------------------------------------------------------------------------------
section_code = new_section("code"); (line 239)

Number of sections = 2, total size = 24
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
append_long(0x78563412); (line 242)

Number of sections = 2, total size = 28
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 4, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 4
    bytes = $12 $34 $56 $78
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 4
    bytes = $12 $34 $56 $78
--------------------------------------------------------------------------------
next_PC(); (line 243)

Number of sections = 2, total size = 28
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 4, addr = 0, origin = -1, align = 1, asmpc = 4, opcode_size = 0
    bytes = $12 $34 $56 $78
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 4
    bytes = $12 $34 $56 $78
--------------------------------------------------------------------------------
append_long(0xF0DEBC9A); (line 245)

Number of sections = 2, total size = 32
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 4, opcode_size = 4
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
--------------------------------------------------------------------------------
next_PC(); (line 246)

Number of sections = 2, total size = 32
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24
*2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 8, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0

Number of modules = 2
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 249)

Number of sections = 2, total size = 32
*1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
--------------------------------------------------------------------------------
section_data = new_section("data"); (line 253)

Number of sections = 3, total size = 32
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8
*3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
memcpy( append_reserve( 11 ), "hello world", 11 ); (line 256)

Number of sections = 3, total size = 43
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8
*3. "data", size = 11, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
--------------------------------------------------------------------------------
next_PC(); (line 257)

Number of sections = 3, total size = 43
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8
*3. "data", size = 11, addr = 0, origin = -1, align = 1, asmpc = 11, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0

Number of modules = 3
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 260)

Number of sections = 3, total size = 43
*1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
 3. "data", size = 11, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("data"); (line 264)

Number of sections = 3, total size = 43
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
*3. "data", size = 11, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 0
    bytes =
--------------------------------------------------------------------------------
append_byte(0xAA); (line 266)

Number of sections = 3, total size = 44
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
*3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 1
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
next_PC(); (line 267)

Number of sections = 3, total size = 44
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
*3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
new_section("code"); (line 269)

Number of sections = 3, total size = 44
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
*2. "code", size = 8, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
append_byte(0xAA); (line 271)

Number of sections = 3, total size = 45
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
*2. "code", size = 9, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 1
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
next_PC(); (line 272)

Number of sections = 3, total size = 45
 1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
*2. "code", size = 9, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
new_section(""); (line 274)

Number of sections = 3, total size = 45
*1. "", size = 24, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    start =   0  24  24  24
 2. "code", size = 9, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
append_byte(0xAA); (line 276)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 1
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
next_PC(); (line 277)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
get_first_section(NULL)->origin = -1; sections_alloc_addr(); (line 280)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 25, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 34, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
get_first_section(NULL)->origin = 100; sections_alloc_addr(); (line 281)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, origin = 100, align = 1, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
set_cur_module_id( 0 ); (line 292)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, origin = 100, align = 1, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
*0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
 3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 0

test.bin = $18 $00 $00 $00 $00 $64 $00 $00 $00 $01 $00 $00 $00 $0C $0B $0A
           $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2 $F1 $F2
           $F3 $F1 $F1 $F2 $F3 $00 $00 $00 $00 $04 $63 $6F $64 $65 $FF $FF
           $FF $FF $01 $00 $00 $00 $00 $00 $00 $00 $04 $64 $61 $74 $61 $FF
           $FF $FF $FF $01 $00 $00 $00 $FF $FF $FF $FF
--------------------------------------------------------------------------------
set_cur_module_id( 1 ); (line 293)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, origin = 100, align = 1, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
*1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
 3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 1

test.bin = $00 $00 $00 $00 $00 $64 $00 $00 $00 $01 $00 $00 $00 $08 $00 $00
           $00 $04 $63 $6F $64 $65 $FF $FF $FF $FF $01 $00 $00 $00 $12 $34
           $56 $78 $9A $BC $DE $F0 $00 $00 $00 $00 $04 $64 $61 $74 $61 $FF
           $FF $FF $FF $01 $00 $00 $00 $FF $FF $FF $FF
--------------------------------------------------------------------------------
set_cur_module_id( 2 ); (line 294)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, origin = 100, align = 1, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
*2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
 3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 2

test.bin = $00 $00 $00 $00 $00 $64 $00 $00 $00 $01 $00 $00 $00 $00 $00 $00
           $00 $04 $63 $6F $64 $65 $FF $FF $FF $FF $01 $00 $00 $00 $0B $00
           $00 $00 $04 $64 $61 $74 $61 $FF $FF $FF $FF $01 $00 $00 $00 $68
           $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $FF $FF $FF $FF
--------------------------------------------------------------------------------
set_cur_module_id( 3 ); (line 295)

Number of sections = 3, total size = 46
*1. "", size = 25, addr = 100, origin = 100, align = 1, asmpc = 1, opcode_size = 0
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA
    start =   0  24  24  24
 2. "code", size = 9, addr = 125, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0 $AA
    start =   0   0   8   8
 3. "data", size = 12, addr = 134, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
    start =   0   0   0  11

Number of modules = 4
 0. "", start = 0, size = 24
    bytes = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1 $F2
            $F1 $F2 $F3 $F1 $F1 $F2 $F3
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
 1. "", start = 24, size = 0
    bytes =
    "code", start = 0, size = 8
    bytes = $12 $34 $56 $78 $9A $BC $DE $F0
    "data", start = 0, size = 0
    bytes =
 2. "", start = 24, size = 0
    bytes =
    "code", start = 8, size = 0
    bytes =
    "data", start = 0, size = 11
    bytes = $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64
*3. "", start = 24, size = 1
    bytes = $AA
    "code", start = 8, size = 1
    bytes = $AA
    "data", start = 11, size = 1
    bytes = $AA
--------------------------------------------------------------------------------
Dump file module 3

test.bin = $01 $00 $00 $00 $00 $64 $00 $00 $00 $01 $00 $00 $00 $AA $01 $00
           $00 $00 $04 $63 $6F $64 $65 $FF $FF $FF $FF $01 $00 $00 $00 $AA
           $01 $00 $00 $00 $04 $64 $61 $74 $61 $FF $FF $FF $FF $01 $00 $00
           $00 $AA $FF $FF $FF $FF
--------------------------------------------------------------------------------
Dump file code area 

test.bin = $0C $0B $0A $09 $08 $07 $06 $05 $04 $03 $F1 $F2 $F3 $F2 $F3 $F1
           $F2 $F1 $F2 $F3 $F1 $F1 $F2 $F3 $AA $12 $34 $56 $78 $9A $BC $DE
           $F0 $AA $68 $65 $6C $6C $6F $20 $77 $6F $72 $6C $64 $AA
--------------------------------------------------------------------------------
reset_codearea(); (line 305)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =

Number of modules = 0
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 308)

Number of sections = 1, total size = 0
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("code"); (line 309)

Number of sections = 2, total size = 0
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
*2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("data"); (line 309)

Number of sections = 3, total size = 0
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
*3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("bss"); (line 309)

Number of sections = 4, total size = 0
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
*4. "bss", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("bss"); (line 310)

Number of sections = 4, total size = 0
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
*4. "bss", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 0
    bytes =
--------------------------------------------------------------------------------
append_byte(3); (line 310)

Number of sections = 4, total size = 1
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 1
    bytes = $03
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
--------------------------------------------------------------------------------
next_PC(); (line 310)

Number of sections = 4, total size = 1
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $03
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
--------------------------------------------------------------------------------
fwrite_module_code( file, &code_size ); (line 312)

Number of sections = 4, total size = 1
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $03
    start =   0

Number of modules = 1
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
--------------------------------------------------------------------------------
Dump file code area 

test.bin = $00 $00 $00 $00 $04 $63 $6F $64 $65 $FF $FF $FF $FF $01 $00 $00
           $00 $00 $00 $00 $00 $04 $64 $61 $74 $61 $FF $FF $FF $FF $01 $00
           $00 $00 $01 $00 $00 $00 $03 $62 $73 $73 $FF $FF $FF $FF $01 $00
           $00 $00 $03 $FF $FF $FF $FF
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 316)

Number of sections = 4, total size = 1
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("code"); (line 317)

Number of sections = 4, total size = 1
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
*2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("data"); (line 317)

Number of sections = 4, total size = 1
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
*3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("bss"); (line 317)

Number of sections = 4, total size = 1
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("data"); (line 318)

Number of sections = 4, total size = 1
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
*3. "data", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
append_byte(2); (line 318)

Number of sections = 4, total size = 2
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
*3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 1
    bytes = $02
    start =   0   0
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
next_PC(); (line 318)

Number of sections = 4, total size = 2
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
*3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $02
    start =   0   0
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
fwrite_module_code( file, &code_size ); (line 320)

Number of sections = 4, total size = 2
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0
*3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $02
    start =   0   0
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1

Number of modules = 2
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
Dump file code area 

test.bin = $00 $00 $00 $00 $04 $63 $6F $64 $65 $FF $FF $FF $FF $01 $00 $00
           $00 $01 $00 $00 $00 $04 $64 $61 $74 $61 $FF $FF $FF $FF $01 $00
           $00 $00 $02 $00 $00 $00 $00 $03 $62 $73 $73 $FF $FF $FF $FF $01
           $00 $00 $00 $FF $FF $FF $FF
--------------------------------------------------------------------------------
module_id = new_module_id(); (line 324)

Number of sections = 4, total size = 2
*1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("code"); (line 325)

Number of sections = 4, total size = 2
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("data"); (line 325)

Number of sections = 4, total size = 2
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("bss"); (line 325)

Number of sections = 4, total size = 2
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("code"); (line 326)

Number of sections = 4, total size = 2
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
append_byte(1); (line 326)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 1
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
next_PC(); (line 326)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
fwrite_module_code( file, &code_size ); (line 328)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
Dump file code area 

test.bin = $01 $00 $00 $00 $04 $63 $6F $64 $65 $FF $FF $FF $FF $01 $00 $00
           $00 $01 $00 $00 $00 $00 $04 $64 $61 $74 $61 $FF $FF $FF $FF $01
           $00 $00 $00 $00 $00 $00 $00 $03 $62 $73 $73 $FF $FF $FF $FF $01
           $00 $00 $00 $FF $FF $FF $FF
--------------------------------------------------------------------------------
set_cur_module_id(0); (line 333)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
 2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("bss"); (line 333)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
 2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
patch_byte(0, 3); (line 333)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
*0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
 2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
set_cur_module_id(1); (line 334)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
*4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
 2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("data"); (line 334)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
*3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
 2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
patch_byte(0, 2); (line 334)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
*3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
*1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
 2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
set_cur_module_id(2); (line 335)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
 2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
*3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
new_section("code"); (line 335)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
patch_byte(0, 1); (line 335)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
get_first_section(NULL)->origin = -1; sections_alloc_addr(); (line 337)

Number of sections = 4, total size = 3
 1. "", size = 0, addr = 0, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes =
    start =   0   0   0
*2. "code", size = 1, addr = 0, origin = -1, align = 1, asmpc = 1, opcode_size = 0
    bytes = $01
    start =   0   0   0
 3. "data", size = 1, addr = 1, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $02
    start =   0   0   1
 4. "bss", size = 1, addr = 2, origin = -1, align = 1, asmpc = 0, opcode_size = 0
    bytes = $03
    start =   0   1   1

Number of modules = 3
 0. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 0
    bytes =
    "bss", start = 0, size = 1
    bytes = $03
 1. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 0
    bytes =
    "data", start = 0, size = 1
    bytes = $02
    "bss", start = 1, size = 0
    bytes =
*2. "", start = 0, size = 0
    bytes =
    "code", start = 0, size = 1
    bytes = $01
    "data", start = 1, size = 0
    bytes =
    "bss", start = 1, size = 0
    bytes =
--------------------------------------------------------------------------------
Dump file code area 

test.bin = $01 $02 $03
--------------------------------------------------------------------------------
